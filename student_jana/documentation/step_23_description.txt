**Задание**
изучите дизайн паттерн Inversion of Control (IoC).
Разберитесь как работает дизайн паттерн Inversion of Control (IoC).
Попробуйте узнать, какой способ получения зависимостей лучше,
какие плюсы и минусы есть у каждого способа.

**Краткое описание процесса выполнения**
прочла статьи, указанные в таске
прочитала статьи в интернете

**Что применил/использовал, чему научился в процессе выполнения задания?**
понимание IoC и способы получения внешних зависимостей

**Сколько потратил времени на выполнение задачи?**
3 часа

**Как убедился в том, что задание выполнено правильно?**
прочитать
**Комментарий в свободной форме**

Тяжело было читать текст по ссылкам, очень много текста(не особо поняла). дополнительно читала в интернете на русском и смотрела примеры.
мне больше всего понравился способ с конструктором, он кажется прозрачным и понятным, видны зависимости

Через конструктор

+Объект создается в полностью инициализированном состоянии
+Легко понять зависимости класса
+Улучшенная тестируемость
- Конструктор может стать громоздким
- Требуется обновление конструктора при добавлении новых зависимостей

Через set методы
+Упрощение конструктора
+Возможность изменения зависимостей после создания объекта
+Гибкость в конфигурации
-Возможность создания неполноценных объектов
-Объект остается изменяемым
-Сложность поддержания корректного состояния объекта

Через свойства объекта
+Удобство и простота реализации
+Минимум кода для установки зависимостей
-Сложность тестирования
-Скрытые зависимости
-Меньше контроля за инициализацией и изменением зависимостей
